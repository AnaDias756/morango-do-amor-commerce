# Default Configuration
spring:
  application:
    name: orderhub
  
  # Database Configuration
  datasource:
    url: jdbc:h2:mem:orderhub
    driver-class-name: org.h2.Driver
    username: sa
    password: 
  
  h2:
    console:
      enabled: true
      path: /h2-console
  
  # JPA Configuration
  jpa:
    hibernate:
      ddl-auto: create-drop
    show-sql: true
    properties:
      hibernate:
        format_sql: true
  
  # Kafka Configuration
  kafka:
    bootstrap-servers: localhost:9092
    consumer:
      group-id: orderhub-group
      auto-offset-reset: earliest
      key-deserializer: org.apache.kafka.common.serialization.StringDeserializer
      value-deserializer: org.springframework.kafka.support.serializer.JsonDeserializer
      properties:
        spring.json.trusted.packages: "com.kipperdev.orderhub.event"
    producer:
      key-serializer: org.apache.kafka.common.serialization.StringSerializer
      value-serializer: org.springframework.kafka.support.serializer.JsonSerializer
  
  # WebFlux Configuration
  webflux:
    base-path: /

# Server Configuration
server:
  port: 8080

# Management/Actuator Configuration
management:
  endpoints:
    web:
      exposure:
        include: health,info,metrics
  endpoint:
    health:
      show-details: always

# Feign Client Configuration
feign:
  client:
    config:
      default:
        connect-timeout: 5000
        read-timeout: 10000
        logger-level: basic

# Abacate Pay Configuration
abacate:
  api:
    base-url: ${ABACATE_API_BASE_URL:https://api.abacatepay.com}
    token: ${ABACATE_API_TOKEN:}
    mock-enabled: ${ABACATE_API_MOCK_ENABLED:true}
  webhook:
    secret: ${ABACATE_WEBHOOK_SECRET:}
    signature:
      enabled: ${ABACATE_WEBHOOK_SIGNATURE_ENABLED:false}

# Admin Configuration
admin:
  username: ${ADMIN_USERNAME:admin}
  password: ${ADMIN_PASSWORD:admin123}

# Logging Configuration
logging:
  level:
    com.kipperdev.orderhub: INFO
    org.springframework.kafka: INFO
    org.springframework.web: INFO
    feign: DEBUG
    root: WARN
  pattern:
    console: "%d{yyyy-MM-dd HH:mm:ss} - %msg%n"
    file: "%d{yyyy-MM-dd HH:mm:ss} [%thread] %-5level %logger{36} - %msg%n"

# Application Configuration
app:
  base-url: ${APP_BASE_URL:http://localhost:8080}
  order:
    status-url-template: "${app.base-url}/public/orders/{orderId}/status"

---
# Local Profile (without Kafka)
spring:
  config:
    activate:
      on-profile: local
  
  kafka:
    enabled: false
  
  autoconfigure:
    exclude:
      - org.springframework.boot.autoconfigure.kafka.KafkaAutoConfiguration

logging:
  level:
    com.kipperdev.orderhub: DEBUG

---
# Test Profile
spring:
  config:
    activate:
      on-profile: test
  
  datasource:
    url: jdbc:h2:mem:testdb
  
  autoconfigure:
    exclude:
      - org.springframework.boot.autoconfigure.kafka.KafkaAutoConfiguration

abacate:
  api:
    mock-enabled: true

logging:
  level:
    com.kipperdev.orderhub: DEBUG

---
# Production Profile
spring:
  config:
    activate:
      on-profile: prod
  
  datasource:
    url: ${DATABASE_URL:jdbc:postgresql://localhost:5432/orderhub}
    driver-class-name: org.postgresql.Driver
    username: ${DATABASE_USERNAME:orderhub}
    password: ${DATABASE_PASSWORD:password}
  
  jpa:
    hibernate:
      ddl-auto: validate
    show-sql: false
    properties:
      hibernate:
        dialect: org.hibernate.dialect.PostgreSQLDialect
  
  kafka:
    bootstrap-servers: ${KAFKA_BOOTSTRAP_SERVERS:localhost:9092}

abacate:
  api:
    mock-enabled: ${ABACATE_API_MOCK_ENABLED:false}
  webhook:
    signature:
      enabled: ${ABACATE_WEBHOOK_SIGNATURE_ENABLED:true}

logging:
  level:
    com.kipperdev.orderhub: INFO
    root: WARN

---
# Docker Profile
spring:
  config:
    activate:
      on-profile: docker
  
  datasource:
    url: ${DATABASE_URL:jdbc:postgresql://postgres:5432/orderhub}
    driver-class-name: org.postgresql.Driver
    username: ${DATABASE_USERNAME:orderhub}
    password: ${DATABASE_PASSWORD:password}
  
  jpa:
    hibernate:
      ddl-auto: update
    show-sql: false
    properties:
      hibernate:
        dialect: org.hibernate.dialect.PostgreSQLDialect
  
  kafka:
    bootstrap-servers: ${KAFKA_BOOTSTRAP_SERVERS:kafka:29092}

abacate:
  api:
    mock-enabled: ${ABACATE_API_MOCK_ENABLED:true}
  webhook:
    signature:
      enabled: ${ABACATE_WEBHOOK_SIGNATURE_ENABLED:false}

logging:
  level:
    com.kipperdev.orderhub: INFO
    root: INFO